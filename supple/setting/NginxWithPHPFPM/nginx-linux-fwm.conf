# Nginx on UNICORN設定
# 前提：Nginxがインストール済みでconfが「/etc/nginx/nginx.conf」として説明
# 「/etc/nginx/nginx.conf」の「http {」の最後に以下追加
# include /etc/nginx/conf.d/*.conf;
#  ※MAMPの場合は「	include /Applications/MAMP/conf/nginx/conf.d/*.conf;」と定義
# 「/etc/nginx/conf.d/」にこのconfファイルを配置して、Nginxを再起動する

# S3にリバースプロキシする為にAWSのDNSを更新する
resolver 10.0.0.2 valid=5s;
# リバースプロキシ設定
proxy_cache_path /var/www/cache/nginx/cache levels=1:2 keys_zone=anlimited:8m max_size=50m inactive=120m;
proxy_temp_path /var/www/cache/nginx/tmp;

# logのフォーマット
set_real_ip_from    10.0.1.0/24;
set_real_ip_from    10.0.2.0/24;
# ELBにSSLを処理させる場合はコチラを利用する
#real_ip_header      X-Forwarded-For;
# ELBのProxyProtocolを有効にして、Nginx側でSSLを処理する場合はコチラを利用する
real_ip_header      proxy_protocol;
log_format main '$proxy_protocol_addr - $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';

server {
	# 環境の設定
	set $workspace "";
	if (-f '/var/www/.dev'){
		set $workspace "dev";
	}

	listen                    80;
	# SSLとSpdyとProxyProtocol
	# ELBのProxyProtocolを使ってSPDYを有効にする場合は以下を利用する
	listen                    443 ssl spdy proxy_protocol;
	# ELBのProxyProtocolを使は無いでSPDYを有効にする場合は以下を利用する
	#listen                    443 ssl spdy;
	# ELBでSSLが終端する場合、以下は不要
	ssl_certificate           /var/www/.ssl/private.pem;
	ssl_certificate_key       /var/www/.ssl/private.key;
	ssl_session_timeout       5m;
	ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers               HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;

	server_name dev.3bk.jp 3bk.jp; # 取得したドメインを指定してください
	# ドキュメントルートを指定して下さい
	# MAMPの場合(Macローカル)
	#root       /Applications/MAMP/htdocs/workspace/Anlimited/webdocs; #環境に合わせて適宜変更して下さい
	#access_log /Applications/MAMP/logs/access.log main;
	#error_log  /Applications/MAMP/logs/error.log debug;
	# Linuxの場合
	root       /var/www/release/webdocs; #環境に合わせて適宜変更して下さい
	access_log /var/www/logs/access.log main;
	error_log  /var/www/logs/error.log debug;
	index      index.html;

	# ELBじゃないホントのIPアドレスを取得するようにする設定
	set_real_ip_from 10.0.1.0/24;
	set_real_ip_from 10.0.2.0/24;
	real_ip_header   X-Forwarded-For;

	# アップロード許容サイズを指定
	client_max_body_size 5M;

	# XXX httpは全てhttpsにリダイレクトする！
	set $redirect "";
	if ($scheme != https) {
		set $redirect "1";
	}
	if ($http_user_agent !~* ELB-HealthChecker) {
		set $redirect "${redirect}1";
	}
	if ($http_host ~ '3bk.jp') {
		set $redirect "${redirect}1";
	}
	#if ($request_uri ~ 'bankentry.html') {
	#	set $redirect "${redirect}2";
	#}
	# jsonはリダイレクトをキャンセルして、元htmlのプロトコルに準拠させる
	if ($request_uri ~ '.json') {
		set $redirect "${redirect}3";
	}
	if ($redirect = "111") {
		rewrite ^ https://$host$request_uri? permanent;
	}
	#if ($redirect = "112") {
	#	rewrite ^ http://$host$request_uri? permanent;
	#}

	# HSTSを有効化(SSL強制の場合はコメントアウトを外す)
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

	# 開発環境用の共通ベーシック認証
	if (-f '/var/www/.dev'){
		set $auth_basic 'use basic area.';
	}
	if ($auth_basic != 'use basic area.'){
		set $auth_basic off;
	}
	# !!! ロードバランサーからのリクエストはベーシックしない！
	if ($http_user_agent ~* ELB-HealthChecker) {
		set $auth_basic off;
	}
	# デバック中は一旦封印！
	#auth_basic $auth_basic;
	#auth_basic_user_file /var/www/release/.htpasswd;

	# Indexのスマホ振り分け
	set $is_sphone "";
	if ($http_user_agent ~ Android) {
		set $is_sphone "1";
	}
	if ($http_user_agent ~ iPhone) {
		set $is_sphone "1";
	}
	if ($http_user_agent ~ iPod) {
		set $is_sphone "1";
	}
	if ($http_user_agent ~ iPod) {
		set $is_sphone "1";
	}
	if ($cookie_pc = "1"){
		# PC強制
		set $is_sphone "";
	}

	# ファイル無指定のトップドメインのURLをindex.htmlに先ずリライトする設定
	location = / {
		if ($is_sphone = "1") {
			# スマホの場合はURLリダイレクト
			rewrite /$ /sp/ permanent;
		}
		rewrite /$ /index.html;
	}

	# ディレクトリTOPのファイル無指定の場合index.htmlにリライトする設定
	location ~ /$ {
		rewrite (.*?)/$ $1/index.html;
	}

	# スマートフォンページからのAPIアクセス時にsp/apiをリライトする設定
	location ~ /sp/api/(.*) {
		rewrite (.*?)/sp/api/(.*)$ $1/api/$2;
	}

	# 静的リーソースへのアクセスをリライトする設定
	location ~ /static/ {
		satisfy    any;
		allow      all;
		# 静的コンテンツはクロスドメインを許可
		add_header Access-Control-Allow-Origin *;
		rewrite    (.*?)/static/(.*) $1/static/$2 break;
	}
	location ~ .*\.ico {
		rewrite (.*?)/(.*).ico $1/static/$2.ico break;
	}
	location ^~ /fwm/assets/ {
		rewrite /fwm/assets/(.*) /fwm/assets/$1 break;
	}

	# DL商材のダウンロードリンク用のリライト設定
	location ~ /download(.+)\.(.+) {
		rewrite (.*?)/download(.+)\.(.+)$ $1/index.php?_c_=Download&_o_=$3&itemid=$2;
	}

	# ファイルアップローダー用のリライト設定(認証ナシ)
	# XXX 認証アリのファイルアップロードはREST-APIを利用して下さい
	#location ~ /api/uploadFiles\.(html|json|xml|csv|tsv) {
	#	rewrite (.*?)/api/uploadFiles\.(.*)$ $1/api/index.php?_c_=api/UploadFiles&_a_=save&_o_=$2;
	#}

	# 動的ファイルのダウンロードリンク用のリライト設定(認証アリ)
	location ~ /dynamiclink/(.+)\.(.+) {
		rewrite (.*?)/dynamiclink/(.*)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=authAndExecute&_r_=UploadFiles&_o_=$3&_path_=$2.$3;
	}

	# 動的ファイルのダウンロードリンク用のリライト設定(認証ナシ)
	#location ~ /dynamiclink/(.+)\.(.+) {
	#	rewrite (.*?)/dynamiclink/(.*)\.(.*)$ $1/api/index.php?_c_=api/UploadFiles&_a_=load&_o_=$3&_path_=$2.$3;
	#}

	location ~ /api/information\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/information\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=information&_o_=$2;
	}

	location ~ /api/genre\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/genre\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=m_genre&_o_=$2&restricted_age%5Bmark%5D=%3C&restricted_age%5Bvalue%5D=15;
	}

	location ~ /api/genre15\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/genre15\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=m_genre&_o_=$2&restricted_age%5Bmark%5D=%3C&restricted_age%5Bvalue%5D=18;
	}

	location ~ /api/genre-org\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/genre-org\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=m_genre&_o_=$2;
	}
	
	location ~ /api/genre18\.json {
		# このhtmlはベーシック不要で常に許可
		satisfy              any;
		allow                all;
		# S3のProxyではベーシック認証しない設定
		proxy_set_header     Authorization '';
		proxy_pass           http://anlimited$workspace.s3.amazonaws.com/static/genre.json; break;
		proxy_ignore_headers Cache-Control;
		proxy_cache          anlimited;
		proxy_cache_valid    200 302 60m;
		proxy_cache_valid    404 10m;
	}

	location ~ /api/circle\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/circle\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=circle&_o_=$2;
	}

	location ~ /api/series\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/series\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=series&_o_=$2;
	}

	location ~ /api/productitem\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/productitem\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=productitem&_o_=$2;
	}

	location ~ /api/virtualrecomend\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/virtualrecomend\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=virtualrecomend&_o_=$2;
	}

	location ~ /api/information/([0-9]+)\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/information/([0-9]+)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=information/$2&_o_=$3;
	}

	location ~ /api/circle/([0-9]+)\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/circle/([0-9]+)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=circle/$2&_o_=$3;
	}

	location ~ /api/series/([0-9]+)\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/series/([0-9]+)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=series/$2&_o_=$3;
	}

	location ~ /api/productitem/([0-9]+)\.(html|json|xml|csv|tsv) {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite (.*?)/api/productitem/([0-9]+)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=productitem/$2&_o_=$3;
	}

	location ~ /item([0-9]+).html {
		rewrite (.*?)/item([0-9]+).html $1/item.html?id=$2;
	}

	location ~ /series([0-9]+).html {
		rewrite (.*?)/series([0-9]+).html $1/series.html?id=$2 break;
	}

	location ~ /circle([0-9]+).html {
		rewrite (.*?)/circle([0-9]+).html $1/circle.html?id=$2 break;
	}

	location ~ /information([0-9]+).html {
		rewrite (.*?)/information([0-9]+).html $1/information.html?id=$2 break;
	}

	location ~ /signupentry-([0-9a-zA-Z]+).html {
		rewrite (.*?)/signupentry-([0-9a-zA-Z]+).html $1/signup-entry.html?token=$2;
	}

	location ~ /passwordreminderentry-([0-9a-zA-Z]+).html {
		rewrite (.*?)/passwordreminderentry-([0-9a-zA-Z]+).html $1/passwordreminder-entry.html?token=$2;
	}

	location ~ /mailmodify-([0-9a-zA-Z]+).html {
		rewrite (.*?)/mailmodify-([0-9a-zA-Z]+).html $1/mypage-user-mailmodify.html?token=$2;
	}

	location ~ /mailmodify.html {
		rewrite (.*?)/mailmodify.html $1/mypage-user-mailmodify.html;
	}

	# Staticなhtmlはリバースプロキシしてしまう。
	location = /index.html {
		# このhtmlはベーシック不要で常に許可
		satisfy              any;
		allow                all;
		# S3のProxyではベーシック認証しない設定
		proxy_set_header     Authorization '';
		proxy_pass           http://anlimited$workspace.s3.amazonaws.com/static/index.html; break;
		proxy_ignore_headers Cache-Control;
		proxy_cache          anlimited;
		proxy_cache_valid    200 302 60m;
		proxy_cache_valid    404 10m;
	}

	location = /sp/index.html {
		# このhtmlはベーシック不要で常に許可
		satisfy              any;
		allow                all;
		# S3のProxyではベーシック認証しない設定
		proxy_set_header     Authorization '';
		proxy_pass           http://anlimited$workspace.s3.amazonaws.com/static/sp/index.html; break;
		proxy_ignore_headers Cache-Control;
		proxy_cache          anlimited;
		proxy_cache_valid    200 302 60m;
		proxy_cache_valid    404 10m;
	}

	location = /home.html {
		# このhtmlはベーシック不要で常に許可
		satisfy              any;
		allow                all;
		# S3のProxyではベーシック認証しない設定
		proxy_set_header     Authorization '';
		proxy_pass           http://anlimited$workspace.s3.amazonaws.com/static/home.html; break;
		proxy_ignore_headers Cache-Control;
		proxy_cache          anlimited;
		proxy_cache_valid    200 302 60m;
		proxy_cache_valid    404 10m;
	}

	# SP
	location = /sp/home.html {
		# このhtmlはベーシック不要で常に許可
		satisfy              any;
		allow                all;
		# S3のProxyではベーシック認証しない設定
		proxy_set_header     Authorization '';
		proxy_pass           http://anlimited$workspace.s3.amazonaws.com/static/sp/home.html; break;
		proxy_ignore_headers Cache-Control;
		proxy_cache          anlimited;
		proxy_cache_valid    200 302 60m;
		proxy_cache_valid    404 10m;
	}

	location ~ /search.html {
		rewrite (.*?)/search.html $1/search.html break;
	}

	location ~ /genres.html {
		rewrite (.*?)/genres.html $1/genres.html break;
	}

	location ~ /items.html {
		rewrite (.*?)/items.html $1/items.html break;
	}

	location ~ /circles.html {
		rewrite (.*?)/circles.html $1/circles.html break;
	}

	location ~ /series.html {
		rewrite (.*?)/series.html $1/series.html break;
	}

	location ~ /affiliate.html {
		rewrite (.*?)/affiliate.html $1/affiliate.html break;
	}

	location ~ /items-trailer.html {
		rewrite (.*?)/items-trailer.html $1/items-trailer.html break;
	}

	location ~ /informations.html {
		rewrite (.*?)/informations.html $1/informations.html break;
	}

	location ~ /information-detail.html {
		rewrite (.*?)/information-detail.html $1/information-detail.html break;
	}

	location ~ /entry-information.html {
		rewrite (.*?)/entry-information.html $1/entry-information.html break;
	}

	location ~ /compliance.html {
		rewrite (.*?)/compliance.html $1/compliance.html break;
	}

	location ~ /beginners.html {
		rewrite (.*?)/beginners.html $1/beginners.html break;
	}

	location ~ /help.html {
		rewrite (.*?)/help.html $1/help.html break;
	}

	location ~ /company.html {
		rewrite (.*?)/company.html $1/company.html break;
	}

	location ~ /general-terms.html {
		rewrite (.*?)/general-terms.html $1/general-terms.html break;
	}

	location ~ /circle-terms.html {
		rewrite (.*?)/circle-terms.html $1/circle-terms.html break;
	}

	location ~ /law.html {
		rewrite (.*?)/law.html $1/law.html break;
	}

	location ~ /privacy.html {
		rewrite (.*?)/privacy.html $1/privacy.html break;
	}

	location ~ /sitemap.html {
		rewrite (.*?)/sitemap.html $1/sitemap.html break;
	}
	
	location ~ /404.html {
		rewrite (.*?)/404.html $1/error404.html break;
	}

	location ~ /pricelist.html {
		rewrite (.*?)/pricelist.html $1/pricelist.html break;
	}

	location ~ /special-commercial.html {
		rewrite (.*?)/special-commercial.html $1/special-commercial.html break;
	}

	location ~ /(.+).xml {
		rewrite (.*?)/(.+).xml $1/$2.xml break;
	}

	# AUTO-REST-AjaxAPI用のリライト設定
	location ~ /api/(.+)\.(html|json|xml|csv|tsv) {
		rewrite (.*?)/api/(.*)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=authAndExecute&_r_=$2&_o_=$3&_deep_=0;
	}

	# 管理ツール用のページはベーシック認証を外す
	# XXX アクセス認証はAccessTokenがやってくれるのでそれに任せる
	location ^~ /fwm/ {
		# このAPIはベーシック不要で常に許可
		satisfy any;
		allow   all;
		set     $auth_basic off;
		rewrite  /fwm/(.*)\.(.*) /index.php?_c_=fwm/$1&_o_=$2;
	}

	# UNICORN-MVC用のリライト設定
	location ~ \.(html|json|xml|csv|tsv) {
		rewrite /(.*)\.(.*)$ /index.php?_c_=$1&_o_=$2;
	}

	# PHP実行環境設定
	location ~ \.php$ {
		try_files            $uri =404;
		fastcgi_read_timeout 600;
		fastcgi_buffers 8 16k;
		fastcgi_buffer_size 32k;
		fastcgi_max_temp_file_size 0;
		gzip off;
		# MAMP用
		#fastcgi_pass         unix:/Applications/MAMP/Library/logs/fastcgi/nginxFastCGI.sock;
		# PHP-FPM用
		fastcgi_pass         unix:/var/run/php-fpm/php-fpm.sock;
		#fastcgi_pass         unix:/var/run/php-fpm.sock;
		fastcgi_param        SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param        HTTPS on;
		fastcgi_param        PATH_INFO $fastcgi_script_name;
		fastcgi_param        RewriteRule "([^+]*)?\.(.*)＄ index.php?_c_=＄1&_o_=＄2";
		fastcgi_param        ReverseRewriteRule "\?_c_\=([^+]*)?\&_o_\=(.*) ./＄1.＄2";
		fastcgi_param        PHP_VALUE "upload_max_filesize = 5M";
		fastcgi_param        PHP_VALUE "post_max_size=5M";
		#fastcgi_param        _filter_ $_filter_;
		#fastcgi_param        _availalefilter_ $_availalefilter_;
		include              fastcgi_params;
	}
}

# 管理ツール用
server {
	# 環境の設定
	set $workspace "";
	if (-f '/var/www/.dev'){
		set $workspace "dev";
	}

	listen                    80;
	# SSLとSpdyとProxyProtocol
	# ELBのProxyProtocolを使ってSPDYを有効にする場合は以下を利用する
	listen                    443 ssl spdy proxy_protocol;
	# ELBのProxyProtocolを使は無いでSPDYを有効にする場合は以下を利用する
	#listen                    443 ssl spdy;
	# ELBでSSLが終端する場合、以下は不要
	ssl_certificate           /var/www/.ssl/private.pem;
	ssl_certificate_key       /var/www/.ssl/private.key;
	ssl_session_timeout       5m;
	ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers               HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers on;

	server_name devfwm.3bk.jp fwm.3bk.jp; # 取得したドメインを指定してください
	# ドキュメントルートを指定して下さい
	# MAMPの場合(Macローカル)
	#root       /Applications/MAMP/htdocs/workspace/Anlimited/managedocs; #環境に合わせて適宜変更して下さい
	#access_log /Applications/MAMP/logs/fwm-access.log main;
	#error_log  /Applications/MAMP/logs/fwm-error.log debug;
	# Linuxの場合
	root       /var/www/release/managedocs; #環境に合わせて適宜変更して下さい
	access_log /var/www/logs/fwm_access.log main;
	error_log  /var/www/logs/fwm_error.log debug;
	index      index.html;

	# ELBじゃないホントのIPアドレスを取得するようにする設定
	set_real_ip_from 10.0.1.0/24;
	set_real_ip_from 10.0.2.0/24;
	real_ip_header   X-Forwarded-For;

	# アップロード許容サイズを指定
	client_max_body_size 5M;

	# XXX httpは全てhttpsにリダイレクトする！
	set $redirect "";
	if ($scheme != https) {
		set $redirect "1";
	}
	if ($http_user_agent !~* ELB-HealthChecker) {
		set $redirect "${redirect}1";
	}
	if ($http_host ~ '3bk.jp') {
		set $redirect "${redirect}1";
	}
	# jsonはリダイレクトをキャンセルして、元htmlのプロトコルに準拠させる
	if ($request_uri ~ '.json') {
		set $redirect "${redirect}3";
	}
	if ($redirect = "111") {
		rewrite ^ https://$host$request_uri? permanent;
	}

	# HSTSを有効化(SSL強制の場合はコメントアウトを外す)
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

	# 管理ツールはベーシック認証を付ける
	auth_basic 'use basic area.';
	auth_basic_user_file /var/www/release/.htpasswd;

	# ファイル無指定のURLをindex.phpにリライトする設定
	location ~ /$ {
		rewrite (.*?)/$ $1/index.php?_c_=Index&_o_=html;
	}

	# frameworkmanagerが利用するajax用のリライト設定
	location ~ /api/(.+)\.(html|json|xml|csv|tsv) {
		rewrite (.*?)/api/(.*)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=$2&_o_=$3&_deep_=0;
	}

	# frameworkmanagerが利用するajax用のリライト設定
	location ~ /xresouce/(.+)\.(html|json|xml|csv|tsv) {
		rewrite (.*?)/xresouce/(.*)\.(.*)$ $1/xresouce/index.php?_c_=api/Rest&_a_=authAndExecute&_r_=$2&_o_=$3&_deep_=0;
	}

	# frameworkmanagerが利用するauto-crud用のリライト設定
	location ~ /crud/(.*?)/(.+)\.(html|json|xml|csv|tsv) {
		#set $_filter_ false;
		set $_availalefilter_ false;
		rewrite (.*?)/crud/(.*?)/(.*)\.(.*)$ $1/crud/index.php?_c_=api/Rest&_a_=execute&_r_=$3&_o_=$4&_p_=$2&_deep_=0;
	}

	# frameworkmanagerが利用するauto-crud用のリライト設定
	location ~ /fwm-(.+?)-(.+?)_(html|json|xml|csv|tsv).html {
		rewrite (.*?)/fwm-(.+?)-(.+?).html$ $1/index.php?_c_=fwm&_a_=execute&_o_=html&target_project=$2&target_url=$3;
	}

	# frameworkmanagerが利用するUNICORN-MVC用のリライト設定
	location ~ \.(html|json|xml|csv) {
		rewrite /(.*)\.(.*)$ /index.php?_c_=$1&_o_=$2;
	}

	# PHP実行環境設定
	location ~ \.php$ {
		try_files            $uri =404;
		fastcgi_read_timeout 600;
		fastcgi_buffers 8 16k;
		fastcgi_buffer_size 32k;
		fastcgi_max_temp_file_size 0;
		gzip off;
		# MAMP用
		#fastcgi_pass         unix:/Applications/MAMP/Library/logs/fastcgi/nginxFastCGI.sock;
		# PHP-FPM用
		fastcgi_pass         unix:/var/run/php-fpm/php-fpm.sock;
		#fastcgi_pass         unix:/var/run/php-fpm.sock;
		fastcgi_param        SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param        HTTPS on;
		fastcgi_param        PATH_INFO $fastcgi_script_name;
		fastcgi_param        RewriteRule "([^+]*)?\.(.*)＄ index.php?_c_=＄1&_o_=＄2";
		fastcgi_param        ReverseRewriteRule "\?_c_\=([^+]*)?\&_o_\=(.*) ./＄1.＄2";
		fastcgi_param        PHP_VALUE "upload_max_filesize = 5M";
		fastcgi_param        PHP_VALUE "post_max_size=5M";
		#fastcgi_param        _filter_ $_filter_;
		#fastcgi_param        _availalefilter_ $_availalefilter_;
		include              fastcgi_params;
	}
}
