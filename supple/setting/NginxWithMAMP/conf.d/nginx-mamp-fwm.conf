# Nginx on UNICORN設定
# 前提：Nginxがインストール済みでconfが「/etc/nginx/nginx.conf」として説明
# 「/etc/nginx/nginx.conf」の「http {」の最後に以下追加
# include /etc/nginx/conf.d/*.conf;
#  ※MAMPの場合は「	include /Applications/MAMP/conf/nginx/conf.d/*.conf;」と定義
# 「/etc/nginx/conf.d/」にこのconfファイルを配置して、Nginxを再起動する

# アプリAPI用
server {
	listen                    80;
	listen                    443 ssl;
	ssl_certificate           /Applications/MAMP/.ssl/self-server.crt;
	ssl_certificate_key       /Applications/MAMP/.ssl/self-server.key;
	ssl_session_timeout       5m;

	server_name UNICORNapi.localhost; # 取得したドメインを指定してください
	# ドキュメントルートを指定して下さい
	# MAMPの場合(Macローカル)
	root        /Applications/MAMP/htdocs/workspace/UNICORN/lib/FrameworkManager/sample/packages/ProjectPackage/apidocs; #環境に合わせて適宜変更して下さい
	access_log  /Applications/MAMP/logs/access.log;
	error_log   /Applications/MAMP/logs/error.log debug;
	# Linuxの場合
	#root        /var/www/current/apidocs; #環境に合わせて適宜変更して下さい
	#access_log  /var/www/logs/access.log;
	#error_log   /var/www/logs/error.log debug;
	index       index.php;

	# アップロード許容サイズを指定
	client_max_body_size 5M;

	# HSTSを有効化(SSL強制の場合はコメントアウトを外す)
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

	# UAからのアプリバージョンを取得
	set $appdisplayversion "";
	set $appversion "";
	if ($http_user_agent ~ [A-Za-z0-9]+\/(\d\.\d\.\d+)) {
		set $appdisplayversion $1;
	}
	if ($http_user_agent ~ [A-Za-z0-9]+\/\d\.\d\.\d+\/([A-Za-z0-9\.]+)) {
		set $appversion $1;
	}

	# AUTO-REST-アプリAPI用のリライト設定
	location ~ /$ {
		rewrite /$ /index.php?_c_=api/Rest&_a_=UIDAuthAndExecute&_r_=&_o_=xml&_v_=$appversion&_dv_=$appdisplayversion;
	}

	location ~ \.(html|json|xml|csv|tsv) {
		rewrite /(.*)?\.(.*)$ /index.php?_c_=api/Rest&_a_=UIDAuthAndExecute&_r_=$1&_o_=$2&_v_=$appversion&_dv_=$appdisplayversion;
	}

	# PHP実行環境設定
	location ~ \.php$ {
		try_files     $uri =404;
		fastcgi_read_timeout 600;
		fastcgi_buffers 8 16k;
		fastcgi_buffer_size 32k;
		fastcgi_max_temp_file_size 0;
		gzip off;
		# MAMP用
		fastcgi_pass  unix:/Applications/MAMP/Library/logs/fastcgi/nginxFastCGI.sock;
		# PHP-FPM用
		#fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_script_name;
		fastcgi_param PHP_VALUE "upload_max_filesize = 5M";
		fastcgi_param PHP_VALUE "post_max_size=5M";
		#fastcgi_param _filter_ $_filter_;
		#fastcgi_param _availalefilter_ $_availalefilter_;
		include       fastcgi_params;
	}
}

# フロント用
server {
	listen                    80;
	listen                    443 ssl;
	ssl_certificate           /Applications/MAMP/.ssl/self-server.crt;
	ssl_certificate_key       /Applications/MAMP/.ssl/self-server.key;
	ssl_session_timeout       5m;

	server_name UNICORN.localhost; # 取得したドメインを指定してください
	# ドキュメントルートを指定して下さい
	# MAMPの場合(Macローカル)
	root        /Applications/MAMP/htdocs/workspace/UNICORN/lib/FrameworkManager/sample/packages/ProjectPackage/webdocs; #環境に合わせて適宜変更して下さい
	access_log  /Applications/MAMP/logs/access.log;
	error_log   /Applications/MAMP/logs/error.log debug;
	# Linuxの場合
	#root        /var/www/current/webdocs; #環境に合わせて適宜変更して下さい
	#access_log  /var/www/logs/access.log;
	#error_log   /var/www/logs/error.log debug;
	index       index.php;

	# アップロード許容サイズを指定
	client_max_body_size 5M;

	# HSTSを有効化(SSL強制の場合はコメントアウトを外す)
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

	# UAからのスマホ振り分け
	set $is_sphone "";
	if ($http_user_agent ~ Android) {
		set $is_sphone "1";
	}
	if ($http_user_agent ~ iPhone) {
		set $is_sphone "1";
	}
	if ($http_user_agent ~ iPod) {
		set $is_sphone "1";
	}
	if ($http_user_agent ~ iPod) {
		set $is_sphone "1";
	}

	# ファイルアップローダー用のリライト設定(認証ナシ)
	# XXX 認証アリのファイルアップロードはREST-APIを利用して下さい
	#location ~ /api/uploadFiles\.(html|json|xml|csv|tsv) {
	#	rewrite (.*?)/api/uploadFiles\.(.*)$ $1/api/index.php?_c_=api/UploadFiles&_a_=save&_o_=$2;
	#}

	# 動的ファイルのダウンロードリンク用のリライト設定(認証アリ)
	location ~ /dynamiclink/(.+)\.(.+) {
		rewrite (.*?)/dynamiclink/(.*)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=authAndExecute&_r_=UploadFiles&_o_=$3&_path_=$2.$3;
	}

	# 動的ファイルのダウンロードリンク用のリライト設定(認証ナシ)
	#location ~ /dynamiclink/(.+)\.(.+) {
	#	rewrite (.*?)/dynamiclink/(.*)\.(.*)$ $1/api/index.php?_c_=api/UploadFiles&_a_=load&_o_=$3&_path_=$2.$3;
	#}

	location ~ /(.+).xml {
		rewrite (.*?)/(.+).xml $1/$2.xml break;
	}

	# AUTO-REST-AjaxAPI用のリライト設定
	location ~ /api/(.+)\.(html|json|xml|csv|tsv) {
		rewrite (.*?)/api/(.*)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=authAndExecute&_r_=$2&_o_=$3&_deep_=0;
	}

	# UNICORN-MVC用のリライト設定
	location ~ \.(html|json|xml|csv|tsv) {
		rewrite /(.*)\.(.*)$ /index.php?_c_=$1&_o_=$2;
	}

	# PHP実行環境設定
	location ~ \.php$ {
		try_files     $uri =404;
		fastcgi_read_timeout 600;
		fastcgi_buffers 8 16k;
		fastcgi_buffer_size 32k;
		fastcgi_max_temp_file_size 0;
		gzip off;
		# MAMP用
		fastcgi_pass  unix:/Applications/MAMP/Library/logs/fastcgi/nginxFastCGI.sock;
		# PHP-FPM用
		#fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_script_name;
		fastcgi_param RewriteRule "([^+]*)?\.(.*)＄ index.php?_c_=＄1&_o_=＄2";
		fastcgi_param ReverseRewriteRule "\?_c_\=([^+]*)?\&_o_\=(.*) ./＄1.＄2";
		fastcgi_param PHP_VALUE "upload_max_filesize = 5M";
		fastcgi_param PHP_VALUE "post_max_size=5M";
		#fastcgi_param _filter_ $_filter_;
		#fastcgi_param _availalefilter_ $_availalefilter_;
		include       fastcgi_params;
	}
}

# 管理ツール用
server {
	listen                    80;
	listen                    443 ssl;
	ssl_certificate           /Applications/MAMP/.ssl/self-server.crt;
	ssl_certificate_key       /Applications/MAMP/.ssl/self-server.key;
	ssl_session_timeout       5m;

	server_name fwmUNICORN.localhost; # 取得したドメインを指定してください
	# ドキュメントルートを指定して下さい
	# MAMPの場合(Macローカル)
	root        /Applications/MAMP/htdocs/workspace/UNICORN/lib/FrameworkManager/template/managedocs; #環境に合わせて適宜変更して下さい
	access_log  /Applications/MAMP/logs/fwm_access.log;
	error_log   /Applications/MAMP/logs/fwm_error.log debug;
	# Linuxの場合
	#root        /var/www/current/managedocs; #環境に合わせて適宜変更して下さい
	#access_log  /var/www/logs/fwm_access.log;
	#error_log   /var/www/logs/fwm_error.log debug;
	index       index.php;

	# アップロード許容サイズを指定
	client_max_body_size 5M;

	# HSTSを有効化(SSL強制の場合はコメントアウトを外す)
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

	# ファイル無指定のURLをindex.phpにリライトする設定
	location ~ /$ {
		rewrite (.*?)/$ $1/index.php?_c_=Index&_o_=html;
	}

	# frameworkmanagerが利用するajax用のリライト設定
	location ~ /api/(.+)\.(html|json|xml|csv|tsv) {
		rewrite (.*?)/api/(.*)\.(.*)$ $1/api/index.php?_c_=api/Rest&_a_=Execute&_r_=$2&_o_=$3&_deep_=0;
	}

	# frameworkmanagerが利用するajax用のリライト設定
	location ~ /xresouce/(.+)\.(html|json|xml|csv|tsv) {
		rewrite (.*?)/xresouce/(.*)\.(.*)$ $1/xresouce/index.php?_c_=api/Rest&_a_=authAndExecute&_r_=$2&_o_=$3&_deep_=0;
	}

	# frameworkmanagerが利用するauto-crud用のリライト設定
	location ~ /crud/(.*?)/(.+)\.(html|json|xml|csv|tsv) {
		#set $_filter_ false;
		set $_availalefilter_ false;
		rewrite (.*?)/crud/(.*?)/(.*)\.(.*)$ $1/crud/index.php?_c_=api/Rest&_a_=execute&_r_=$3&_o_=$4&_p_=$2&_deep_=0;
	}

	# frameworkmanagerが利用するauto-crud用のリライト設定
	location ~ /fwm-(.+?)-(.+?)_(html|json|xml|csv|tsv).html {
		rewrite (.*?)/fwm-(.+?)-(.+?).html$ $1/index.php?_c_=fwm&_a_=execute&_o_=html&target_project=$2&target_url=$3;
	}

	# frameworkmanagerが利用するUNICORN-MVC用のリライト設定
	location ~ \.(html|json|xml|csv) {
		rewrite /(.*)\.(.*)$ /index.php?_c_=$1&_o_=$2;
	}

	# PHP実行環境設定
	location ~ \.php$ {
		try_files     $uri =404;
		fastcgi_buffers 8 16k;
		fastcgi_buffer_size 32k;
		# MAMP用
		fastcgi_pass  unix:/Applications/MAMP/Library/logs/fastcgi/nginxFastCGI.sock;
		# PHP-FPM用
		#fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_script_name;
		fastcgi_param RewriteRule "([^+]*)?\.(.*)＄ index.php?_c_=＄1&_o_=＄2";
		fastcgi_param ReverseRewriteRule "\?_c_\=([^+]*)?\&_o_\=(.*) ./＄1.＄2";
		fastcgi_param PHP_VALUE "upload_max_filesize = 5M";
		fastcgi_param PHP_VALUE "post_max_size=5M";
		#fastcgi_param _filter_ $_filter_;
		fastcgi_param _availalefilter_ $_availalefilter_;
		include              fastcgi_params;
	}
}

